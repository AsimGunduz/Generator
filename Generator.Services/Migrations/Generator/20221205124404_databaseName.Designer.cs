// <auto-generated />
using Generator.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Generator.Services.Migrations.Generator
{
    [DbContext(typeof(GeneratorContext))]
    [Migration("20221205124404_databaseName")]
    partial class databaseName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Generator.Shared.Models.COMPONENT", b =>
                {
                    b.Property<int>("COMP_ROWID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("COMP_ROWID"), 1L, 1);

                    b.Property<string>("COMP_DATABASE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("COMP_TITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COMP_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("COMP_ROWID");

                    b.HasIndex("COMP_DATABASE");

                    b.ToTable("COMPONENT");
                });

            modelBuilder.Entity("Generator.Shared.Models.DATABASES", b =>
                {
                    b.Property<string>("DatabaseIdentifier")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConnectionString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatabaseIdentifier");

                    b.ToTable("DATABASES");
                });

            modelBuilder.Entity("Generator.Shared.Models.FOOTER_BUTTON", b =>
                {
                    b.HasBaseType("Generator.Shared.Models.COMPONENT");

                    b.Property<int>("FB_GRID_REFNO")
                        .HasColumnType("int");

                    b.HasIndex("FB_GRID_REFNO");

                    b.ToTable("FOOTER_BUTTON");
                });

            modelBuilder.Entity("Generator.Shared.Models.GRIDS_M", b =>
                {
                    b.HasBaseType("Generator.Shared.Models.COMPONENT");

                    b.ToTable("GRIDS_M");
                });

            modelBuilder.Entity("Generator.Shared.Models.HEADER_BUTTON", b =>
                {
                    b.HasBaseType("Generator.Shared.Models.COMPONENT");

                    b.Property<int>("HB_GRID_REFNO")
                        .HasColumnType("int");

                    b.HasIndex("HB_GRID_REFNO");

                    b.ToTable("HEADER_BUTTON");
                });

            modelBuilder.Entity("Generator.Shared.Models.GRIDS_D", b =>
                {
                    b.HasBaseType("Generator.Shared.Models.GRIDS_M");

                    b.Property<int>("GD_M_REFNO")
                        .HasColumnType("int");

                    b.HasIndex("GD_M_REFNO");

                    b.ToTable("GRIDS_D");
                });

            modelBuilder.Entity("Generator.Shared.Models.COMPONENT", b =>
                {
                    b.HasOne("Generator.Shared.Models.DATABASES", "DATABASES")
                        .WithMany()
                        .HasForeignKey("COMP_DATABASE");

                    b.Navigation("DATABASES");
                });

            modelBuilder.Entity("Generator.Shared.Models.FOOTER_BUTTON", b =>
                {
                    b.HasOne("Generator.Shared.Models.COMPONENT", null)
                        .WithOne()
                        .HasForeignKey("Generator.Shared.Models.FOOTER_BUTTON", "COMP_ROWID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Generator.Shared.Models.GRIDS_M", null)
                        .WithMany("FOOTER_BUTTON")
                        .HasForeignKey("FB_GRID_REFNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Generator.Shared.Models.GRIDS_M", b =>
                {
                    b.HasOne("Generator.Shared.Models.COMPONENT", null)
                        .WithOne()
                        .HasForeignKey("Generator.Shared.Models.GRIDS_M", "COMP_ROWID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Generator.Shared.Models.HEADER_BUTTON", b =>
                {
                    b.HasOne("Generator.Shared.Models.COMPONENT", null)
                        .WithOne()
                        .HasForeignKey("Generator.Shared.Models.HEADER_BUTTON", "COMP_ROWID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Generator.Shared.Models.GRIDS_M", null)
                        .WithMany("HEADER_BUTTON")
                        .HasForeignKey("HB_GRID_REFNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Generator.Shared.Models.GRIDS_D", b =>
                {
                    b.HasOne("Generator.Shared.Models.GRIDS_M", null)
                        .WithOne()
                        .HasForeignKey("Generator.Shared.Models.GRIDS_D", "COMP_ROWID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Generator.Shared.Models.GRIDS_M", null)
                        .WithMany("GRIDS_D")
                        .HasForeignKey("GD_M_REFNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Generator.Shared.Models.GRIDS_M", b =>
                {
                    b.Navigation("FOOTER_BUTTON");

                    b.Navigation("GRIDS_D");

                    b.Navigation("HEADER_BUTTON");
                });
#pragma warning restore 612, 618
        }
    }
}
